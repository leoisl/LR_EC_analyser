# How to execute the sample test - we will simulate long reads from the Mus Musculus chrom 19
python run_LR_EC_analyser.py --genome sample_data/Mus_musculus.GRCm38.dna.chromosome.19.fa --gtf sample_data/Mus_musculus.GRCm38.91.chr19.gtf -t 4 -o sample_data/output --paralogous sample_data/Mus_musculus.GRCm38.91.paralog_genes.90_percent_plus_identity.txt --raw sample_data/gmap_CB_1Donly_to_GRCm38_chr19.bam sample_data/good.gmap.chr19.bam sample_data/indels.gmap.chr19.bam sample_data/subs.gmap.chr19.bam



#-----THIS EXAMPLE IS FROM THE SIMULATOR------#
#What was done to get the data:
#We got the 100k first reads from the raw 1D_only reads from mouse RNA produced by Genoscope in the ASTER project (these runs were on ngs-provisoire):
cd /data2/ASTER/error_correction/raw_1D_only_data_no_mito_no_rDNA
head -n 400000 BYK_CB_ONT_1_FAF04998_A_1Donly.no_mito.no_rDNA.fastq > BYK_CB_ONT_1_FAF04998_A_1Donly.no_mito.no_rDNA.100k.fastq
mv BYK_CB_ONT_1_FAF04998_A_1Donly.no_mito.no_rDNA.100k.fastq /data2/leandro/RNA_simulator/
cd /data2/leandro/RNA_simulator/

#we ran gmap on this subsample:
gmap -D /data2/ASTER/nanopore_mouse/Our_mapping_to_mRNA_only/gmap_genome/ -d GRCm38 -n 10 -t 8 -f samse BYK_CB_ONT_1_FAF04998_A_1Donly.no_mito.no_rDNA.100k.fastq > gmap_CB_1Donly_to_GRCm38_100k.sam

#we filtered the reads that mapped only on the chrom 19 (~4k reads):
awk '{split($1, chars, ""); if(chars[1]=="@" || $3==19){print $0}}' gmap_CB_1Donly_to_GRCm38_100k.sam > gmap_CB_1Donly_to_GRCm38_chr19.sam

#we get the bam and the bai
samtools view -b -S gmap_CB_1Donly_to_GRCm38_chr19.sam > gmap_CB_1Donly_to_GRCm38_chr19.bam
samtools sort -o gmap_CB_1Donly_to_GRCm38_chr19.sorted.bam gmap_CB_1Donly_to_GRCm38_chr19.bam
samtools index gmap_CB_1Donly_to_GRCm38_chr19.sorted.bam
rm gmap_CB_1Donly_to_GRCm38_100k.sam
rm gmap_CB_1Donly_to_GRCm38_chr19.sam
rm gmap_CB_1Donly_to_GRCm38_chr19.bam


#we get the chr19 genome reference
wget ftp://ftp.ensembl.org/pub/release-91/fasta/mus_musculus/dna/Mus_musculus.GRCm38.dna.chromosome.19.fa.gz
gunzip Mus_musculus.GRCm38.dna.chromosome.19.fa.gz

#we get the annotations only from chrom 19
wget ftp://ftp.ensembl.org/pub/release-91/gtf/mus_musculus/Mus_musculus.GRCm38.91.gtf.gz
gunzip Mus_musculus.GRCm38.91.gtf.gz
awk '$1==19' Mus_musculus.GRCm38.91.gtf | cat <(head -n 5 Mus_musculus.GRCm38.91.gtf) - > Mus_musculus.GRCm38.91.chr19.gtf
rm Mus_musculus.GRCm38.91.gtf

#we compact the files to put it in git
env GZIP=-9 tar cvzf sample_test.tar.gz *19*




#----NOW WE SIMULATE 3 LR ERROR CORRECTORS, WORST THAN THE RAW READS------
#we get the reads in the bam
samtools view gmap_CB_1Donly_to_GRCm38_chr19.sorted.bam | awk '{print $10}' | sort | uniq | awk 'BEGIN{rn=0; OFS=""}{print ">",rn,"\n",$0; rn+=1}' > reads_from_bam.fa

#"simulate" 3 Error Correctors
simulate(){
prefix=$5
python pretty_bad_simulator.py reads_from_bam.fa $1 $2 $3 $4 > ${prefix}.fa
gmap -D /data2/ASTER/nanopore_mouse/Our_mapping_to_mRNA_only/gmap_genome -d GRCm38 -n 10 -t 4 -f samse ${prefix}.fa >  ${prefix}.gmap.sam
awk '{split($1, chars, ""); if(chars[1]=="@" || $3==19){print $0}}' ${prefix}.gmap.sam > ${prefix}.gmap.chr19.sam
rm ${prefix}.gmap.sam
samtools view -S -o ${prefix}.gmap.chr19.bam ${prefix}.gmap.chr19.sam
rm ${prefix}.gmap.chr19.sam
}


simulate 0.7 0.01 0.01 0.01 good
simulate 0.9 0.01 0.1 0.1 indels
simulate 0.6 0.1 0.01 0.01 subs
